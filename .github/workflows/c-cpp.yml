name: Continuous Integration on Master
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  target-linux:
    name: Target Linux
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install dependencies
      run: |
           sudo apt-get update
           sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3 curl
           sudo apt-get install -y protobuf-c-compiler
           sudo apt-get install -y libdb4.8-dev libdb4.8++-dev
           sudo apt-get install -y libminiupnpc-dev
           sudo apt-get install -y libcurl4-openssl-dev pkg-config
           sudo apt-get install -y libsasl2-dev
           sudo apt-get install -y libtool libtool-bin
           sudo apt-get install -y libcurl4-openssl-dev
    - name: Build Lyra
      run: |
           sudo libtoolize --automake --copy --debug --force
           sudo autoreconf -i
           sudo ./autogen.sh
           sudo ./configure --disable-gui-tests --disable-shared --disable-tests --disable-bench --with-unsupported-ssl --with-libressl --with-gui=qt5
           sudo make -j$(nproc)
    - name: Work around ltmain.sh issue
      if: failure()
      run: |
           ./autogen.sh
           ./configure --disable-gui-tests --disable-shared --disable-tests --disable-bench --with-unsupported-ssl --with-libressl --with-gui=qt5
           make -j$(nproc)
  target-windows:
    name: Target Windows
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install dependencies
      run: |
           sudo apt-get update
           sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3 curl
           sudo apt-get install -y g++-mingw-w64-x86-64 gcc-mingw-w64-x86-64
           sudo apt-get install -y protobuf-c-compiler  
    - name: Switch MinGW GCC and G++ to POSIX Threading
      run: |
           sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
           sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
    - name: Build dependencies
      run: make -C depends -j$(nproc) HOST=x86_64-w64-mingw32
    - name: Build Lyra
      run: |
           libtoolize --automake --copy --debug --force
           ./autogen.sh --enable-maintainer-mode
           sudo CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --disable-gui-tests --disable-shared --disable-tests --disable-bench --with-unsupported-ssl --with-libressl --with-gui=qt5 --prefix=/
           make -j$(nproc)
    - name: Work around ltmain.sh issue
      if: failure()
      run: |
           autoreconf -i
           ./autogen.sh --enable-maintainer-mode
           sudo CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --disable-gui-tests --disable-shared --disable-tests --disable-bench --with-unsupported-ssl --with-libressl --with-gui=qt5 --prefix=/
           make -j$(nproc)
  target-macos:
    name: Target macOS
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install dependencies
      run: brew install automake berkeley-db4 libtool boost miniupnpc pkg-config python qt libevent qrencode ccache
    - name: Build Lyra
      run: |
           autoreconf -i
           ./autogen.sh --enable-maintainer-mode
           ./configure --disable-gui-tests --disable-shared --disable-tests --disable-bench --with-unsupported-ssl --with-libressl --with-gui=qt5
           make -j$(nproc)
    - name: Work around ltmain.sh issue
      if: failure()
      run: |
           autoreconf -i
           ./autogen.sh --enable-maintainer-mode
           ./configure --disable-gui-tests --disable-shared --disable-tests --disable-bench --with-unsupported-ssl --with-libressl --with-gui=qt5
           make -j$(nproc)