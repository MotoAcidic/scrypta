name: Continuous Integration on Master
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
env:
  SOURCE_ARTIFACT: source
jobs:
  build-linux:
    name: Build for Linux
    needs: create-source-distribution
    runs-on: ubuntu-18.04
    env:
      ARTIFACT_DIR: source
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install depends
      run: |
           sudo apt-get update
           sudo apt install -y build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git
           sudo apt-get install -y libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler
           sudo apt-get install -y software-properties-common
           sudo add-apt-repository ppa:bitcoin/bitcoin
           sudo apt-get install -y libdb4.8-dev libdb4.8++-dev
           sudo apt-get install -y libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev
           sudo apt-get install -y libzmq3-dev
           sudo apt-get install -y libminiupnpc-dev
           sudo apt-get install -y libtool
           sudo apt-get install -y libcurl4-openssl-dev
    - name: Build Scrypta
      run: |
           ./autogen.sh
           ./configure --with-unsupported-ssl
           make -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Botched work around
      if: failure()
      run: |
           ./autogen.sh
           ./configure --with-unsupported-ssl
           make -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        mv $SOURCE_ARTIFACT/src/{lyra-cli,lyra-tx,lyrad,qt/lyra-qt} $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: linux-binaries
        path: ${{ env.ARTIFACT_DIR }}
    
  build-windows:
    name: Build for Windows
    needs: create-source-distribution
    runs-on: ubuntu-18.04
    env:
      ARTIFACT_DIR: windows-binaries
    steps:
    - name: Getting Source
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
    - name: Extract Archives
      run: |
        tar -xzf depends.tar.gz
        tar -xzf lyra-*.tar.gz --strip-components=1
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-mingw-w64-x86-64 gcc-mingw-w64-x86-64
    - name: Switch MinGW GCC and G++ to POSIX Threading
      run: |
        sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
    - name: Build Dependencies
      run: make -C depends -j$(nproc) HOST=x86_64-w64-mingw32
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Build Scrypta
      run: |
        sudo CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/
        make -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        mv $SOURCE_ARTIFACT/src/{lyra-cli.exe,lyra-tx.exe,lyrad.exe,qt/lyra-qt.exe} $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: windows-binaries
        path: ${{ env.ARTIFACT_DIR }}
  build-mac:
    name: Build for macOS
    needs: create-source-distribution
    runs-on: macos-10.15
    env:
      ARTIFACT_DIR: mac-binaries
    steps:
    - name: Getting Source
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
    - name: Extract Archives
      run: |
        tar -xzf depends.tar.gz
        tar -xzf lyra-*.tar.gz --strip-components=1
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Use Xcode instead of Command Line Tools
      run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
    - name: Install Required Packages
      run: brew install automake coreutils pkg-config
    - name: Build Dependencies
      run: make -C depends -j$(sysctl -n hw.activecpu)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Build Zcoin
      run: |
        ./configure --prefix=`pwd`/depends/x86_64-apple-darwin11
        make -j$(sysctl -n hw.activecpu)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        mv $SOURCE_ARTIFACT/src/{lyra-cli,lyra-tx,lyra,qt/lyra-qt} $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: mac-binaries
        path: ${{ env.ARTIFACT_DIR }}