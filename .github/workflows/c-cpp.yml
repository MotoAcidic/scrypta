name: Continuous Integration on Master
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  target-linux:
    name: Target Linux
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install dependencies
      run: |
           sudo apt-get update
           sudo apt install -y build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git
           sudo apt-get install -y libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler
           sudo apt-get install -y software-properties-common
           sudo add-apt-repository ppa:bitcoin/bitcoin
           sudo apt-get update -y
           sudo apt-get install -y libdb4.8-dev libdb4.8++-dev
           sudo apt-get install -y libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev
           sudo apt-get install -y libzmq3-dev
           sudo apt-get install -y libminiupnpc-dev
           sudo apt-get install -y libtool
           sudo apt-get install -y libcurl4-openssl-dev
           sudo apt-get install -y openssl
           sudo apt-get install -y autoconf g++ make openssl libssl-dev libcurl4-openssl-dev
           sudo apt-get install -y libcurl4-openssl-dev pkg-config
           sudo apt-get install -y libsasl2-dev
    - name: Build dependencies
      run: make -C depends -j$(nproc) HOST=x86_64-unknown-linux-gnu
    - name: Build Lyra
      run: |
        ./autogen.sh
        ./configure --with-unsupported-ssl
        make -j$(nproc)
    - name: Work around ltmain.sh issue
      if: failure()
      run: |
           sudo apt-get update
           sudo apt install -y build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git
           sudo apt-get install -y libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler
           sudo apt-get install -y software-properties-common
           sudo add-apt-repository ppa:bitcoin/bitcoin
           sudo apt-get update -y
           sudo apt-get install -y libdb4.8-dev libdb4.8++-dev
           sudo apt-get install -y libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev
           sudo apt-get install -y libzmq3-dev
           sudo apt-get install -y libminiupnpc-dev
           sudo apt-get install -y libtool
           sudo apt-get install -y libcurl4-openssl-dev
           sudo apt-get install -y openssl
           sudo apt-get install -y autoconf g++ make openssl libssl-dev libcurl4-openssl-dev
           sudo apt-get install -y libcurl4-openssl-dev pkg-config
           sudo apt-get install -y libsasl2-dev
           sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3 curl
           ./autogen.sh
           CONFIG_SITE=$PWD/depends/x86_64-pc-linux-gnu/share/config.site ./configure --with-unsupported-ssl --prefix=/
           make -j$(nproc)
    - name: Download Dependencies
      run: make -C depends download
    - name: Create Dependencies Tarball
      run: tar -czf depends.tar.gz depends
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        mv depends.tar.gz lyra-*.tar.gz $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
        path: ${{ env.ARTIFACT_DIR }}
  target-windows:
    name: Target Windows
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-mingw-w64-x86-64 gcc-mingw-w64-x86-64
    - name: Switch MinGW GCC and G++ to POSIX Threading
      run: |
        sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
    - name: Build dependencies
      run: make -C depends -j$(nproc) HOST=x86_64-w64-mingw32
    - name: Build Zcoin
      run: |
        ./autogen.sh
        sudo CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/
        make -j$(nproc)
  target-macos:
    name: Target macOS
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install dependencies
      run: brew install automake berkeley-db4 libtool boost miniupnpc pkg-config python qt libevent qrencode ccache
    - name: Build Lyra
      run: |
        ./autogen.sh
        ./configure --enable-exodus
        make -j$(nproc)
